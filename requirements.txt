# ===========================================================================
# SECURE AI CHATBOT WITH PERPLEXITY - PYTHON DEPENDENCIES
# ===========================================================================
# 
# This file contains all the Python packages required to run the secure chatbot.
# Install these dependencies by running: pip install -r requirements.txt
#
# ===========================================================================

# Core HTTP and networking libraries
requests>=2.31.0          # For making HTTP requests to APIs
httpx>=0.25.0            # Advanced HTTP client for modern applications
urllib3>=2.0.0           # HTTP client library (requests dependency)

# OpenAI-compatible client for Perplexity API
openai>=1.0.0            # OpenAI Python library (compatible with Perplexity)

# JSON and data handling
pydantic>=2.0.0          # Data validation and parsing

# Palo Alto Networks AI Security SDK (Enterprise Security)
pan-aisecurity>=1.0.0    # Official Palo Alto Networks AI Security Python SDK

# Async processing capabilities
asyncio-throttle>=1.0.0  # Rate limiting for async operations (optional)

# Development and debugging (optional - remove for production)
python-dotenv>=1.0.0     # Load environment variables from .env files

# ===========================================================================
# PRODUCTION DEPLOYMENT NOTES
# ===========================================================================
#
# üì¶ PACKAGE SECURITY:
# - All packages are pinned to minimum safe versions
# - Regularly update packages to get security patches
# - Use 'pip list --outdated' to check for updates
# - Consider using 'pip-audit' to scan for vulnerabilities
#
# üè¢ ENTERPRISE CONSIDERATIONS:
# - Use private package repositories for better security
# - Implement dependency scanning in your CI/CD pipeline
# - Consider using virtual environments or containers
# - Document any custom package sources or modifications
#
# üîí SECURITY SCANNING:
# Run these commands periodically:
# - pip-audit                    # Scan for known vulnerabilities
# - safety check                 # Alternative security scanner
# - pip list --outdated         # Check for package updates
#
# ===========================================================================